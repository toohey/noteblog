<?php

namespace iMVC\Model;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-05-23 at 01:39:53.
 */
class BaseModelTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var BaseModel
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new BaseModel;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers iMVC\Model\BaseModel::LoadModel
     * @todo   Implement testLoadModel().
     */
    public function testLoadModel() {
        BaseModel::$load_table = array();
        $this->assertCount(0, BaseModel::$load_table);
        BaseModel::LoadModel('Test');
        $this->assertTrue(BaseModel::IsModelLoaded('Test'));
        try{
            BaseModel::LoadModel('NonExistsTestModel');
        }
        catch (\iMVC\Exceptions\NotFoundException $e){}
        $this->assertTrue(isset($e));
        $this->assertFALSE(BaseModel::IsModelLoaded('NonExistsTestModel'));
        BaseModel::LoadModel('TestModel');
        $this->assertTrue(BaseModel::IsModelLoaded('Test'));
        $this->assertCount(1, BaseModel::$load_table);
    }

    /**
     * @covers iMVC\Model\BaseModel::LoadGlobalModel
     * @todo   Implement testLoadGlobalModel().
     */
    public function testLoadGlobalModel() {
        BaseModel::$load_table = array();
        $this->assertFalse(BaseModel::IsModelLoaded('GTestModel', "__GLOBAL"));
        $this->assertCount(0, BaseModel::$load_table);
        try{
            BaseModel::LoadGlobalModel('iGTest');
            $this->object->LoadGlobalModel('GTest');
            $this->assertTrue(BaseModel::IsGlobalModelLoaded('GTest'));
        }
        catch (\iMVC\Exceptions\NotFoundException $e){}
        $this->assertTrue(isset($e));
        $this->assertFalse(BaseModel::IsGlobalModelLoaded('iGTest'));
        $this->assertCount(0, BaseModel::$load_table);
    }

}
